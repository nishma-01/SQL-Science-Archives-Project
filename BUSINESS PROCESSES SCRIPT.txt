


/***************************************** PROCESS 1 *****************************************/


INSERT INTO system_user 
(capacity_id, first_name, last_name, email_address, phone_number, contact_preference)
VALUES	('1', 'polly', 'pepper', 'polly@live.com', '01213452344', 'email');

UPDATE system_user
SET email_address = 'bunnies123@live.com'
WHERE user_id = 2;


/***************************************** PROCESS 2 *****************************************/


INSERT INTO user_subject_preference 
(user_id, subject_id)
VALUES	('1', '3');


/***************************************** PROCESS 3 *****************************************/


INNER JOIN publication
ON thesis_details.publication_id = publication.publication_id
WHERE publication.publication_id = '3';


/***************************************** PROCESS 4 *****************************************/


INSERT INTO user_library 
(user_id, publication_id, read_type_id)
VALUES	('7', '4', '2');

INSERT INTO user_reviews 
(library_id, review, review_score, review_date)
VALUES	('31', 'great paper', '84', '2022-04-12');

SELECT * FROM user_reviews
WHERE library_id = 31;

/* the below script violates the unique constraint in the table since library_id 31 already exists. Index constraint was created in the user library which also prevents the same publication being entered for a user, so these processes prevent a user from inserting more than one review for the same publication. */

/* the script previously inserted when creating the tables as seen in the 'creating table script is below for reference:

CREATE UNIQUE INDEX user_lib_index
 ON user_library (user_id, publication_id); */

INSERT INTO user_reviews 
(library_id, review, review_score, review_date)
VALUES	('31', 'excellent', '100', '2022-04-14');


/***************************************** PROCESS 5/ALGORITHM *****************************************/

/* part 1 */

SELECT AVG (review_score)
FROM user_reviews;

SELECT AVG (review_score)
FROM user_reviews
INNER JOIN user_library
ON user_library.library_id = user_reviews.library_id
WHERE publication_id = '10';

/* part 2 */

SELECT publication_subject_areas.subject_id 
FROM publication_subject_areas
INNER JOIN user_subject_preference
ON user_subject_preference.subject_id = publication_subject_areas.subject_id
WHERE publication_id = '10' AND user_id = 7;

SELECT SUM (contribution_score)
FROM author_contribution_score
WHERE subject_id = '10';

